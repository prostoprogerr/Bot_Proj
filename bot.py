import telebot
import io
import logging
from recognizer import process_image_pipeline
from PIL import Image

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('app.log'),
        logging.StreamHandler()
    ]
)

bot = telebot.TeleBot('7654203891:AAFEb7yBUe5YqoP4ADJnl8Ipa7GzJlJjvt4')


@bot.message_handler(content_types=['text'])
def handle_text(message):
    if message.text == "/start":
        bot.send_message(message.chat.id,
                         "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å *—Ä—É—Å—Å–∫–∏–π —Ä—É–∫–æ–ø–∏—Å–Ω—ã–π —Ç–µ–∫—Å—Ç* —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.\n\n"
                         "üì∏ –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ, —è –∏–∑–≤–ª–µ–∫—É —Ç–µ–∫—Å—Ç, —Ä–∞—Å–ø–æ–∑–Ω–∞—é –µ–≥–æ –∏ –ø—Ä–æ–≤–µ—Ä—é –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—é!\n\n"
                         "–î–ª—è —Å–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–∏—à–∏ /help.")
    elif message.text == "/help":
        bot.send_message(message.chat.id,
                         "üÜò *–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É*\n\n"
                         "–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n"
                         "1Ô∏è‚É£ –†–∞—Å–ø–æ–∑–Ω–∞—é *—Ä—É–∫–æ–ø–∏—Å–Ω—ã–π —Ç–µ–∫—Å—Ç* —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n"
                         "2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è—é *–æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—é –∏ –≥—Ä–∞–º–º–∞—Ç–∏–∫—É*\n"
                         "3Ô∏è‚É£ –î–∞—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç\n\n"
                         "üìå *–°–æ–≤–µ—Ç—ã:*\n"
                         "‚Äî –î–µ–ª–∞–π —á—ë—Ç–∫–∏–µ —Ñ–æ—Ç–æ\n"
                         "‚Äî –õ—É—á—à–µ –∑–∞–≥—Ä—É–∂–∞–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ-–¥–æ–∫—É–º–µ–Ω—Ç (–±–µ–∑ —Å–∂–∞—Ç–∏—è)\n"
                         "üì• –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ, –∏ —è –Ω–∞—á–Ω—É —Ä–∞–±–æ—Ç–∞—Ç—å!")
    else:
        bot.send_message(message.chat.id,
                         "ü§î –ü—Ä–æ—Å—Ç–∏, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è...\n–ù–∞–ø–∏—à–∏ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è —É–º–µ—é.")


@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    try:
        bot.send_message(message.chat.id, "üì• –ü–æ–ª—É—á–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ-–¥–æ–∫—É–º–µ–Ω—Ç. \nüß† –†–∞—Å–ø–æ–∑–Ω–∞—é —Ç–µ–∫—Å—Ç...")

        file_info = bot.get_file(message.photo[-1].file_id)
        downloaded = bot.download_file(file_info.file_path)
        image = Image.open(io.BytesIO(downloaded)).convert("RGB")

        raw_text, corrected_text, errors = process_image_pipeline(image)

        bot.send_message(message.chat.id, f"üìù *–†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:*\n`{raw_text}", parse_mode="Markdown")
        bot.send_message(message.chat.id, f"‚úÖ *–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:*\n`{corrected_text}", parse_mode="Markdown")

        if errors:
            bot.send_message(message.chat.id, f"üîç *–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏:*\n{errors}", parse_mode="HTML")
        else:
            bot.send_message(message.chat.id, "üéâ –û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")

    except Exception as e:
        bot.send_message(message.chat.id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
        print(f"–û—à–∏–±–∫–∞: {e}")

@bot.message_handler(content_types=['document'])
def handle_image_document(message):
    try:
        file_name = message.document.file_name.lower()
        image_extensions = (".jpg", ".jpeg", ".png", ".bmp", ".tiff", ".webp")

        if not file_name.endswith(image_extensions):
            bot.send_message(message.chat.id, "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (JPG, PNG –∏ —Ç.–¥.), –∞ –Ω–µ –¥—Ä—É–≥–æ–π —Ç–∏–ø —Ñ–∞–π–ª–∞.")
            return

        bot.send_message(message.chat.id, "üì• –ü–æ–ª—É—á–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ-–¥–æ–∫—É–º–µ–Ω—Ç. \nüß† –†–∞—Å–ø–æ–∑–Ω–∞—é —Ç–µ–∫—Å—Ç...")

        file_info = bot.get_file(message.document.file_id)
        downloaded = bot.download_file(file_info.file_path)
        image = Image.open(io.BytesIO(downloaded)).convert("RGB")

        raw_text, corrected_text, errors = process_image_pipeline(image)

        bot.send_message(message.chat.id, f"üìù *–†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:*\n{raw_text}", parse_mode="Markdown")
        bot.send_message(message.chat.id, f"‚úÖ *–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:*\n{corrected_text}", parse_mode="Markdown")

        if errors:
            bot.send_message(message.chat.id, f"üîç *–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏:*\n{errors}", parse_mode="HTML")
        else:
            bot.send_message(message.chat.id, "üéâ –û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")

    except Exception as e:
        bot.send_message(message.chat.id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è-–¥–æ–∫—É–º–µ–Ω—Ç–∞.")
        print(f"[ERROR] –û—à–∏–±–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º-–¥–æ–∫—É–º–µ–Ω—Ç–æ–º: {e}")


print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...")
bot.polling(none_stop=True)
