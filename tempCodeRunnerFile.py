import telebot
from transformers import TrOCRProcessor, VisionEncoderDecoderModel
from PIL import Image
import torch
import io
import os

bot = telebot.TeleBot('7654203891:AAFEb7yBUe5YqoP4ADJnl8Ipa7GzJlJjvt4')

processor_dir = os.path.join(".", "trocr_processor_v2")
model_dir = os.path.join(".", "trocr_model_v2")

processor = TrOCRProcessor.from_pretrained(processor_dir)
model = VisionEncoderDecoderModel.from_pretrained(model_dir)

@bot.message_handler(content_types=['text'])
def Get_Text_Message(message):
    print("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π :)")
    if message.text == "/start":
        bot.send_message(message.from_user.id,
                        "–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä—É–∫–æ–ø–∏—Å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞."
                        " –ü—Ä–∏—à–ª–∏ –º–Ω–µ —Ñ–æ—Ç–æ, –∏ —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å, —á—Ç–æ –Ω–∞ –Ω–µ–º –Ω–∞–ø–∏—Å–∞–Ω–æ!")
    elif message.text == "/help":
        bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏ /start!")
    else:
        bot.send_message(message.from_user.id, "–ü—Ä–æ—Å—Ç–∏... –Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è :(\n–¢—ã –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ!")

@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    try:
        file_info = bot.get_file(message.photo[-1].file_id)
        downloaded_file = bot.download_file(file_info.file_path)

        image = Image.open(io.BytesIO(downloaded_file)).convert("RGB")

        pixel_values = processor(images=image, return_tensors="pt").pixel_values
        generated_ids = model.generate(pixel_values)
        text = processor.batch_decode(generated_ids, skip_special_tokens=True)[0]

        bot.send_message(message.chat.id, f"üìù –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:\n{text}")

    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
        print(e)


print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
bot.polling(none_stop=True)